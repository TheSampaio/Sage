#include <fstream>
#include <iostream>
#include <string>
#include <unordered_map>

int main() {
    std::ifstream input("Test/Main.sg");

    if (!input.is_open())
    {
        std::cerr << "[ERROR] Failed to read input." << std::endl;
        return EXIT_FAILURE;
    }

    std::ofstream output("Test/Output.sgc");

    if (!output.is_open())
    {
        std::cerr << "[ERROR] Failed to create output file." << std::endl;
        return EXIT_FAILURE;
    }

    std::unordered_map<std::string, std::string> substituicoes = {

        // === <SAGE> | <C++> === //

        // Key words
        {"Main", "main"},
        {"use", "#include"},
        {"print", "printf"},
        {"null", "nullptr"},

        // Libraries
        {"std::array", "<array>"},
        {"std::io", "<iostream>"},
        {"std::memory", "<memory>"},
        {"std::string", "<string>"},
        {"std::vector", "<vector>"},

        // Types
        {"i8", "char"},
        {"i16", "short"},
        {"i32", "int"},
        {"i64", "long"},

        {"u8",  "unsigned char"},
        {"u16", "unsigned short"},
        {"u32", "unsigned int"},
        {"u64", "unsigned long"},

        {"f32", "float"},
        {"f64", "double"},
    };

    std::string line;

    while (std::getline(input, line))
    {
        for (auto& par : substituicoes)
        {
            size_t pos = 0;

            while ((pos = line.find(par.first, pos)) != std::string::npos)
            {
                line.replace(pos, par.first.length(), par.second);
                pos += par.second.length();
            }
        }

        output << line << std::endl;
        //std::cout << line << std::endl;
    }

    input.close();
    output.close();

    return EXIT_SUCCESS;
}